// <auto-generated />
using System;
using CloudService.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CloudService.Infrastructure.Migrations
{
    [DbContext(typeof(CloudServiceDbContext))]
    [Migration("20240821083532_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("cloud")
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CloudService.Domain.Configuration", b =>
                {
                    b.Property<Guid>("ConfigurationId")
                        .HasColumnType("uuid")
                        .HasColumnName("configuration_id");

                    b.Property<Guid>("CpuId")
                        .HasColumnType("uuid")
                        .HasColumnName("cpu_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("IpId")
                        .HasColumnType("uuid")
                        .HasColumnName("ip_id");

                    b.Property<Guid>("OsId")
                        .HasColumnType("uuid")
                        .HasColumnName("os_id");

                    b.Property<Guid>("RamId")
                        .HasColumnType("uuid")
                        .HasColumnName("ram_id");

                    b.Property<Guid>("RomId")
                        .HasColumnType("uuid")
                        .HasColumnName("rom_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("character varying(31)")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("ConfigurationId")
                        .HasName("pk_configurations");

                    b.HasIndex("CpuId")
                        .HasDatabaseName("ix_configurations_cpu_id");

                    b.HasIndex("IpId")
                        .HasDatabaseName("ix_configurations_ip_id");

                    b.HasIndex("OsId")
                        .HasDatabaseName("ix_configurations_os_id");

                    b.HasIndex("RamId")
                        .HasDatabaseName("ix_configurations_ram_id");

                    b.HasIndex("RomId")
                        .HasDatabaseName("ix_configurations_rom_id");

                    b.ToTable("configurations", "cloud");
                });

            modelBuilder.Entity("CloudService.Domain.Cpu", b =>
                {
                    b.Property<Guid>("CpuId")
                        .HasColumnType("uuid")
                        .HasColumnName("cpu_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.HasKey("CpuId")
                        .HasName("pk_cpu");

                    b.ToTable("cpu_configuration", "cloud");

                    b.HasData(
                        new
                        {
                            CpuId = new Guid("8485ca24-7d9e-49f2-bbfe-ecf9a07b06b1"),
                            Name = "2 vCPUs",
                            Price = 20.00m
                        },
                        new
                        {
                            CpuId = new Guid("4b8b40e1-3fc8-4fa2-b5a7-c4f074b40fe3"),
                            Name = "4 vCPUs",
                            Price = 40.00m
                        },
                        new
                        {
                            CpuId = new Guid("2b8ff258-4c77-4083-8f61-90d163fba5f9"),
                            Name = "8 vCPUs",
                            Price = 80.00m
                        },
                        new
                        {
                            CpuId = new Guid("9e1028d3-9883-4153-ab09-4057559fab4b"),
                            Name = "16 vCPUs",
                            Price = 160.00m
                        });
                });

            modelBuilder.Entity("CloudService.Domain.Ip", b =>
                {
                    b.Property<Guid>("IpId")
                        .HasColumnType("uuid")
                        .HasColumnName("ip_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.HasKey("IpId")
                        .HasName("pk_ip");

                    b.ToTable("ip_configuration", "cloud");

                    b.HasData(
                        new
                        {
                            IpId = new Guid("ed639c26-a960-4cee-88e0-a2f0106fb46e"),
                            Name = "Dynamic IP",
                            Price = 10.00m
                        },
                        new
                        {
                            IpId = new Guid("eeba3582-8e8a-46e5-a4dc-5885236b9e4b"),
                            Name = "Static IP",
                            Price = 20.00m
                        });
                });

            modelBuilder.Entity("CloudService.Domain.Os", b =>
                {
                    b.Property<Guid>("OsId")
                        .HasColumnType("uuid")
                        .HasColumnName("os_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.HasKey("OsId")
                        .HasName("pk_os");

                    b.ToTable("os_configuration", "cloud");

                    b.HasData(
                        new
                        {
                            OsId = new Guid("2b0eee2d-38b5-4f2e-9edc-b785f9ecd994"),
                            Name = "Linux Ubuntu",
                            Price = 0.00m
                        },
                        new
                        {
                            OsId = new Guid("77333839-40d1-4eb9-a98f-16409b110dfb"),
                            Name = "Windows 10",
                            Price = 30.00m
                        },
                        new
                        {
                            OsId = new Guid("9adcb21d-8084-45c8-92e6-54d57128d7a6"),
                            Name = "Windows Server",
                            Price = 50.00m
                        },
                        new
                        {
                            OsId = new Guid("f42ecf13-658e-49ae-9073-e5fec96e6022"),
                            Name = "Red Hat Enterprise Linux",
                            Price = 25.00m
                        });
                });

            modelBuilder.Entity("CloudService.Domain.Ram", b =>
                {
                    b.Property<Guid>("RamId")
                        .HasColumnType("uuid")
                        .HasColumnName("ram_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.HasKey("RamId")
                        .HasName("pk_ram");

                    b.ToTable("ram_configuration", "cloud");

                    b.HasData(
                        new
                        {
                            RamId = new Guid("a184c92b-54cf-4dfe-a9c7-8bca2c514b3e"),
                            Name = "2 GB",
                            Price = 30.00m
                        },
                        new
                        {
                            RamId = new Guid("aba7e469-792e-4019-bb2b-ecf45abd5514"),
                            Name = "4 GB",
                            Price = 60.00m
                        },
                        new
                        {
                            RamId = new Guid("47cc8291-d7cd-4aff-97bd-f80b02151866"),
                            Name = "8 GB",
                            Price = 120.00m
                        },
                        new
                        {
                            RamId = new Guid("eae1be23-b006-4bf3-a649-a24e6f0e2889"),
                            Name = "16 GB",
                            Price = 240.00m
                        });
                });

            modelBuilder.Entity("CloudService.Domain.Rom", b =>
                {
                    b.Property<Guid>("RomId")
                        .HasColumnType("uuid")
                        .HasColumnName("rom_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.HasKey("RomId")
                        .HasName("pk_rom");

                    b.ToTable("rom_configuration", "cloud");

                    b.HasData(
                        new
                        {
                            RomId = new Guid("821da0ef-3f9b-4648-b4da-2565c3968f6e"),
                            Name = "128 GB",
                            Price = 50.00m
                        },
                        new
                        {
                            RomId = new Guid("29c0b899-c4a6-44c5-a8eb-a7d469a0613f"),
                            Name = "256 GB",
                            Price = 100.00m
                        },
                        new
                        {
                            RomId = new Guid("aeef7042-3664-4796-9287-87a61ebeb302"),
                            Name = "512 GB",
                            Price = 200.00m
                        },
                        new
                        {
                            RomId = new Guid("7517d1d0-7fe4-4f9b-a18a-32deb253117e"),
                            Name = "1 TB",
                            Price = 400.00m
                        });
                });

            modelBuilder.Entity("CloudService.Domain.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("username");

                    b.HasKey("UserId")
                        .HasName("pk_users");

                    b.HasIndex(new[] { "UserId" }, "idx_users_id")
                        .IsUnique()
                        .HasDatabaseName("ix_users_user_id");

                    b.HasIndex(new[] { "Username" }, "idx_users_username")
                        .IsUnique()
                        .HasDatabaseName("ix_users_username");

                    b.ToTable("users", "cloud");
                });

            modelBuilder.Entity("CloudService.Domain.Configuration", b =>
                {
                    b.HasOne("CloudService.Domain.User", null)
                        .WithMany("Configs")
                        .HasForeignKey("ConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_configurations_users_configuration_id");

                    b.HasOne("CloudService.Domain.Cpu", "Cpu")
                        .WithMany()
                        .HasForeignKey("CpuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_configurations_cpus_cpu_id");

                    b.HasOne("CloudService.Domain.Ip", "Ip")
                        .WithMany()
                        .HasForeignKey("IpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_configurations_ips_ip_id");

                    b.HasOne("CloudService.Domain.Os", "Os")
                        .WithMany()
                        .HasForeignKey("OsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_configurations_oss_os_id");

                    b.HasOne("CloudService.Domain.Ram", "Ram")
                        .WithMany()
                        .HasForeignKey("RamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_configurations_rams_ram_id");

                    b.HasOne("CloudService.Domain.Rom", "Rom")
                        .WithMany()
                        .HasForeignKey("RomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_configurations_roms_rom_id");

                    b.Navigation("Cpu");

                    b.Navigation("Ip");

                    b.Navigation("Os");

                    b.Navigation("Ram");

                    b.Navigation("Rom");
                });

            modelBuilder.Entity("CloudService.Domain.User", b =>
                {
                    b.Navigation("Configs");
                });
#pragma warning restore 612, 618
        }
    }
}
