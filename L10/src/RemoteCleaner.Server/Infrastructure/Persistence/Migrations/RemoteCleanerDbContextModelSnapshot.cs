// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RemoteCleaner.Server.Infrastructure.Persistence;

#nullable disable

namespace RemoteCleaner.Server.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(RemoteCleanerDbContext))]
    partial class RemoteCleanerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RemoteCleaner.Server.Application.Domain.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("room_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoomId"));

                    b.Property<DateTime>("CleanedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("cleaned_at");

                    b.Property<int>("Length")
                        .HasColumnType("integer")
                        .HasColumnName("length");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Width")
                        .HasColumnType("integer")
                        .HasColumnName("width");

                    b.Property<int>("X")
                        .HasColumnType("integer")
                        .HasColumnName("x");

                    b.Property<int>("Y")
                        .HasColumnType("integer")
                        .HasColumnName("y");

                    b.HasKey("RoomId")
                        .HasName("pk_rooms");

                    b.ToTable("rooms", (string)null);

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            CleanedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Length = 100,
                            Name = "Kitchen",
                            Width = 100,
                            X = 25,
                            Y = 25
                        },
                        new
                        {
                            RoomId = 2,
                            CleanedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Length = 200,
                            Name = "Bedroom",
                            Width = 200,
                            X = 25,
                            Y = 75
                        },
                        new
                        {
                            RoomId = 3,
                            CleanedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Length = 150,
                            Name = "Bathroom",
                            Width = 150,
                            X = 75,
                            Y = 25
                        },
                        new
                        {
                            RoomId = 4,
                            CleanedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Length = 250,
                            Name = "Living Room",
                            Width = 250,
                            X = 75,
                            Y = 75
                        });
                });

            modelBuilder.Entity("RemoteCleaner.Server.Application.Domain.Station", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("station_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StationId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("serial_number");

                    b.Property<int>("X")
                        .HasColumnType("integer")
                        .HasColumnName("x");

                    b.Property<int>("Y")
                        .HasColumnType("integer")
                        .HasColumnName("y");

                    b.HasKey("StationId")
                        .HasName("pk_stations");

                    b.ToTable("stations", (string)null);

                    b.HasData(
                        new
                        {
                            StationId = 1,
                            Name = "StationCleaner",
                            SerialNumber = "#123456789N",
                            X = 50,
                            Y = 50
                        });
                });

            modelBuilder.Entity("RemoteCleaner.Server.Application.Domain.Station", b =>
                {
                    b.OwnsMany("RemoteCleaner.Server.Application.Domain.Log", "Logs", b1 =>
                        {
                            b1.Property<int>("StationId")
                                .HasColumnType("integer")
                                .HasColumnName("station_id");

                            b1.Property<int>("LogId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasColumnName("log_id");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("LogId"));

                            b1.Property<string>("Message")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("message");

                            b1.Property<DateTime>("Time")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("time_at");

                            b1.HasKey("StationId", "LogId")
                                .HasName("pk_logs");

                            b1.ToTable("station_logs", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("StationId")
                                .HasConstraintName("fk_station_logs_stations_station_id");
                        });

                    b.Navigation("Logs");
                });
#pragma warning restore 612, 618
        }
    }
}
